@model IEnumerable<BO.Theme>

@{
    ViewBag.Title = "Liste des thèmes";
}

<div class="form-group row">
    <div class="col-md-4 text-right">
        <button type="button" class="btn btn-default btn-sm btn-quickTheme"><i class="fa fa-plus"></i> Ajouter un thème</button>
    </div>
    <div class="col-md-8">
        <div id="quickTheme" class="hidden">
            <div class="form-group">
                <label>Libellé</label>
                <input class="form-control input-sm" id="theme-libelle" type="text" />
            </div>
            <div class="form-group">
                <label>Description</label>
                <textarea cols="3" rows="3" id="theme-description" class="form-control input-sm"></textarea>
            </div>
            <button id="addTheme" class="btn btn-default" type="button"><i class="fa fa-plus"></i> Ajouter</button>
        </div>
    </div>
</div>
<div class="help-block">
    Désactiver un thème empêchera celui-ci d'être sélectionné dans la création d'un nouvel événement. <br/>
    Les événements associés à ce thème resteront inchangés.
</div>
<div id="list-theme">

</div>

<script type="text/javascript">
    function loadTheme(){
        $.ajax({
                url: '@Url.Action("AjaxListe", "Themes")',
                type: 'GET',
                dataType: 'json',
            }).done(function (response) {
                $('#list-theme').html(response.Html);

                $(".btn-theme").off("click");
                $(".btn-theme").on("click", function () {
                    var id = $(this).data("id");

                    $.ajax({
                        url: '@Url.Action("AjaxToogleActive", "Themes")',
                        type: 'post',
                        data: {
                            id: id
                        },
                        dataType: 'json',
                    }).done(function (response) {

                        if (!response.Error) {
                            loadTheme();
                            $.notify('opération terminé avec succés', 'success');
                        }
                        else {
                            $.notify("Impossible d'activer / désactiver", "error");
                            console.log(response);
                        }
                    }).fail(function (response) {
                        $.notify("Impossible d'activer / désactiver", "error");
                        console.log(arguments);
                    });
                });
            }).fail(function (response) {
                $.notify("une erreur c'est produite lors du chargement de la page", "error");
                console.log(arguments);
            });
    }

    $(function () {
        loadTheme();

        $('.btn-quickTheme').on('click', function () {
            $('#quickTheme').removeClass('hidden');
        });
        $('#addTheme').on('click', function () {
            var lib = $('#quickTheme #theme-libelle').val();
            var desc = $('#quickTheme #theme-description').val();
            $('#theme-libelle').parent().removeClass('has-error');
            var datas = { libelle: lib, description: desc };
            if (lib != "" && lib !== null) {
                $.ajax({
                    url: '@Url.Action("AjaxQuickCreate", "Themes")',
                    method: 'post',
                    data: datas
                }).done(function (response) {
                    if (response.list) {
                        $('#quickTheme #theme-libelle').val('');
                        $('#quickTheme #theme-description').val('');
                        $('#quickTheme').addClass('hidden');
                        loadTheme();
                    }
                }).fail(function (response) {
                    $.notify('Une erreur s\'est produite lors de la création du thème', 'danger');
                })
            } else {
                $('#theme-libelle').parent().addClass('has-error');
            }
        });

    });
</script>