@using Microsoft.AspNet.Identity;
<div class="modal fade" id="detailModal" role="dialog">
    <div class="modal-dialog modal-lg" style="width:900px">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h2 class="modal-title">Détail de l'événement</h2>
            </div>
            <div class="modal-body">
                <div id="event-detail-modal"></div>
            </div>
            <input type="hidden" id="eventId" />
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i> Fermer</button>
                <button type="button" class="btn btn-success hidden" id="inscription"><i class="fa fa-address-book-o" aria-hidden="true"></i> S'inscrire</button>
                <button type="button" class="btn btn-danger hidden" id="desinscription"><i class="fa fa-address-book-o" aria-hidden="true"></i> Se désinscrire</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript"
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyByNxF6boskqziz8hWVjBuTJhXCPYlOsfE&sensor=false">
</script>
<script src="https://unpkg.com/leaflet@1.2.0/dist/leaflet.js"></script>
<script src="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.js"></script>
<script type="text/javascript">

    var mymap = null;

    function leafleftMap(Adresse) {
        
        var geocoder = new google.maps.Geocoder();
        var address = Adresse;
        geocoder.geocode({ 'address': address }, function (results, status) {

            if (status == google.maps.GeocoderStatus.OK) {
                var latitude = results[0].geometry.location.lat();
                var longitude = results[0].geometry.location.lng();
                mymap = L.map('mapid').setView([latitude, longitude], 13);
                L.tileLayer.provider('OpenStreetMap.France').addTo(mymap);
                var marker = L.marker([latitude, longitude]).addTo(mymap);
                marker.bindPopup("<b>"+ Adresse +"</b>").openPopup();
            }
        });

    }

    function detailEvent(id) {
        $('#eventId').val(id);
        $('#event-detail-modal').html('<i class="fa fa-cog fa-spin  fa-2x fa-fw"></i> chargement...');
        $.ajax({
            url: '@Url.Action("AjaxDetails", "Evenements")' + '/' + id,
            type: 'GET',
            dataType: 'json'
        }).done(function (response) {
            $('#event-detail-modal').html(response.Html);

            if (response.Inscrit) {
                $('#desinscription').removeClass('hidden');
            } else {
                $('#inscription').removeClass('hidden');
            }
            
            leafleftMap(response.Adresse);
        }).fail(function (response) {
            $('#event-detail-modal').html('<div class="alert alert-danger">Une erreur s\'est produite lors du chargement des données</div>');
            console.log(response);
        });
    }

    function searchParking() {
        $('#bouton-parking').off('click');
        $('#bouton-parking').on('click', function () {
            var AdresseEvenement = $('#bouton-parking').data('adresse');

            var AdresseUtilisateur = $('#adresse-utilisateur').val();

            var geocoder = new google.maps.Geocoder();

            var latEvent = null;
            var lngEvent = null;
            var latDepart = null;
            var lngDepart = null;

            geocoder.geocode({ 'address': AdresseUtilisateur }, function (results, status) {

                if (status == google.maps.GeocoderStatus.OK) {
                    latDepart = results[0].geometry.location.lat();
                    lngDepart = results[0].geometry.location.lng();
                    if (mymap != null) {
                        var marker = L.marker([latDepart, lngDepart]).addTo(mymap);
                        marker.bindPopup("<b>Depart</b>").openPopup();
                    }

                    geocoder.geocode({ 'address': AdresseEvenement }, function (results, status) {

                        if (status == google.maps.GeocoderStatus.OK) {
                            latEvent = results[0].geometry.location.lat();
                            lngEvent = results[0].geometry.location.lng();

                            if (latDepart != null && lngDepart != null && latEvent != null && lngEvent != null) {
       
                               var RoutControl = new L.Routing.control({
                                    waypoints: [
                                      L.latLng(latDepart, lngDepart),
                                      L.latLng(latEvent, lngEvent)
                                    ]
                                }).addTo(mymap);
                                
                            }
                            else {
                                $.notify("une erreur est survenu lors de la récuperation des adresses", "error");
                            }
                        }
                        else {
                            $.notify("L'adresse de l'événement est incorect", "error");
                        }
                    });
                }
                else {
                    $.notify("Adresse de départ incorect", "error");
                }
            });
        });
    }

    $('#inscription').on('click', function () {
        if (!$(this).hasClass('disabled')) {
            $(this).addClass('disabled');
            var self = this;
            var isAuth = '@User.Identity.IsAuthenticated';
            console.log(isAuth);
            var eventId = $('#eventId').val();
            var datas = { idEvenement: eventId };
            if (isAuth) { // Inscrit l'utilisateur courrant
                var userId = '@User.Identity.GetUserId()';
                $.ajax({
                    url: '@Url.Action("AjaxInscription", "Evenements")',
                    method: 'post',
                    data: datas
                }).done(function (response) {
                    if (!response.Error) {
                        $.notify('Vous avez bien été inscrit à cet événement', 'success');
                        $(self).addClass('hidden');
                        $(self).removeClass('disabled');
                        $('#desinscription').removeClass('hidden');
                    } else {
                        $.notify('Une erreur s\'est produite lors de l\'inscription', 'warn');
                        $(this).removeClass('disabled');
                    }
                }).fail(function (response) {
                    $.notify('Une erreur s\'est produite lors de l\'inscription', 'warn');
                    $(this).removeClass('disabled');
                    console.log(response);
                });
            } else { // demande connexion / inscription

            }
        }
    });

    $('#desinscription').on('click', function () {
        if (!$(this).hasClass('disabled')) {
            $(this).addClass('disabled');
            var self = this;
            var isAuth = '@User.Identity.IsAuthenticated';
            console.log(isAuth);
            var eventId = $('#eventId').val();
            var datas = { idEvenement: eventId };
            $.ajax({
                url: '@Url.Action("AjaxDesinscription", "Evenements")',
                method: 'post',
                data: datas
            }).done(function (response) {
                if (!response.Error) {
                    $.notify('Vous avez bien été désinscrit de cet événement', 'success');
                    $(self).addClass('hidden');
                    $(self).removeClass('disabled');
                    $('#inscription').removeClass('hidden');
                } else {
                    $.notify('Une erreur s\'est produite lors de la désinscription', 'warn');
                    $(self).removeClass('disabled');
                }
            }).fail(function (response) {
                $.notify('Une erreur s\'est produite lors de la désinscription', 'warn');
                $(this).removeClass('disabled');
                console.log(response);
            });
        }
    });

</script>
