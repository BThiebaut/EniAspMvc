@using EniProjetMvc.Extensions
@model IEnumerable<BO.Evenement>

@{
    ViewBag.Title = "Liste des événements";
    ViewBag.btnNav = new List<BtnNav>();
    var btnNav = new BtnNav { Url = @Url.Action("Create", "Evenements"), Text = "Nouvel événement", Icone = "fa fa-plus-circle", Color = "success", AdminOnly = true };
    var btnNavArchive = new BtnNav { Url = @Url.Action("AjaxArchiveAuto", "Evenements"), Text = "Mettre à jour les statuts", Icone = "fa fa-refresh", Color = "warning", Id = "archive-events", AdminOnly = true };
    ViewBag.btnNav.Add(btnNav);
    ViewBag.btnNav.Add(btnNavArchive);
}

<p id="liste-evenements">

</p>

@RenderPage("~/Views/Evenements/ModalDetail.cshtml")

<script type="text/javascript">

    @{
        var isModeMyEvents = Request.Params.Get("mode") != null;
        var routeListe = Url.Action("AjaxListe", "Evenements");
        if (isModeMyEvents)
        {
            routeListe = Url.Action("ListInscrit", "Evenements");
        }
    }

    var isModeMyEvents = '@isModeMyEvents';

    function submitFilters() {
        var formData = $('#filter-form').serializeArray();
        loadListEvents(formData);
    }

    function registerFilterEvents() {
        $('#filter-action').off('click');
        $('#filter-action').on('click', function () {
            submitFilters();
        });

        $('#filter-form').off('submit');
        $('#filter-form').on('submit', function (e) {
            e.preventDefault();
            submitFilters();
        });
    }

    function loadListEvents(filters) {
        var filterdata = '';
        console.log(filters);
        if (typeof filters != 'undefined' && filters !== null && filters.length > 0) {
            filterdata = '?';
            $.each(filters, function (key, data) {
                console.log(data);
                filterdata += data.name + '=' + data.value + '&';
            });

            filterdata = filterdata.substr(0, filterdata.length - 1);
        }

        $(function () {
            $.ajax({
                url: '@routeListe' + filterdata,
                type: 'GET',
                dataType: 'json',
            }).done(function (response) {
                $('#liste-evenements').html(response.Html);
                registerFilterEvents();
                // Remplis les filtres actifs
                if (typeof filters != 'undefined' && filters !== null && filters.length > 0) {
                    $.each(filters, function (idx, data) {
                        $('input[name="' + data.name + '"]').val(data.value);
                        $('select[name="' + data.name + '"]').val(data.value);
                    });
                }
            }).fail(function (response) {
                swal("Une erreur est survenue lors du rechargement de la page", {
                    icon: "error",
                });
                console.log(response);
            });


            $('#archive-events').off('click');
            $('#archive-events').on('click', function (e) {
                e.preventDefault();
                var url = $(this).attr('href');

                swal({
                    title: "Confirmation",
                    text: "Voulez-vous mettre à jours les statuts des événements automatiquement ?",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                })
                .then((willDelete) => {
                    if (willDelete) {
                        $.ajax({
                            url: url,
                            type: 'GET',
                        }).done(function (response) {
                            if (!response.Error) {
                                $.notify("Les statuts ont bien été mis à jour", "success");
                                loadListEvents();
                            }
                            else {
                                $.notify("Une erreur est survenue lors l'archivage semi-automatique", "error");
                                console.log(response);
                            }
                        });
                    }
                });
            });
        });
    }
    loadListEvents();


    function deleteEvent(self) {
        var text = "Voulez-vous annuler l'événement \"" + $(self).data('name') + "\" ?";
        text += "\nLes utilisateurs inscrits seront alertés par e-mail.";

        swal({
            title: "Confirmation",
            text: text,
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
        .then((willDelete) => {
            if (willDelete) {
                $.ajax({
                    url: '@Url.Action("AjaxDelete", "Evenements")' + '/' + $(self).data('id'),
                    type: 'GET',
                    dataType: 'json',
                }).done(function (response) {
                    if (!response.error) {
                        $.ajax({
                            url: '@Url.Action("AjaxListe", "Evenements")',
                            type: 'GET',
                            dataType: 'json',
                        }).done(function (response) {
                            $('#liste-evenements').html(response.Html);
                            $.notify("Événement annulé", "success");
                        }).fail(function (response) {
                            $.notify("Une erreur est survenue lors du rechargement de la page", "error");
                            console.log(response);
                        });
                    }
                    else {
                        $.notify("Une erreur est survenue lors de la suppression", "error");
                        console.log(response);
                    }
                });
            }
        });
    }

    function redirectAction(e) {
        var href = $(e).data('href');
        window.location.href = href;
    }


</script>

