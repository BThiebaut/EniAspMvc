@using EniProjetMvc.Extensions
@model EniProjetMvc.Models.EvenementVM

@{
    ViewBag.Title = "Create";
    var mode = Model.Evenement == null;
    ViewBag.btnNav = new List<BtnNav>();
    var btnNav = new BtnNav { Url = Url.Action("Index"), Text = "Retour", Icone = "fa fa-arrow-left", Color = "default" };
    ViewBag.btnNav.Add(btnNav);
}


@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Evenement.Id)

        @Html.WidgetFor(model => model.Evenement.Intitule)
        @Html.DateWidgetFor(model => model.Evenement.DateDebut)
        @Html.DateWidgetFor(model => model.Evenement.DateFin)
        @Html.WidgetFor(model => model.Evenement.Duree)
        @Html.TimeWidgetFor(model => model.Evenement.HeureOuverture)
        @Html.TimeWidgetFor(model => model.Evenement.HeureFermeture)
        @Html.WidgetFor(model => model.Evenement.Adresse)

        @Html.DropDownWidgetFor(model => model.Evenement.Theme, model => model.selectedTheme, Model.Themes.Select(o => new SelectListItem { Value = o.Id.ToString(), Text = o.Libelle, Selected = o.Id == Model.selectedTheme }))
        <div class="form-group">
            <div class="col-md-4 text-right">
                <button type="button" class="btn btn-default btn-sm btn-quickTheme"><i class="fa fa-plus"></i> Ajouter un thème</button>
            </div>
            <div class="col-md-8">
                <div id="quickTheme" class="hidden">
                    <div class="form-group">
                        <label>Libellé</label>
                        <input class="form-control input-sm" id="theme-libelle" type="text" />
                    </div>
                    <div class="form-group">
                        <label>Description</label>
                        <textarea cols="3" rows="3" id="theme-description" class="form-control input-sm"></textarea>
                    </div>
                    <button id="addTheme" class="btn btn-default" type="button"><i class="fa fa-plus"></i> Ajouter</button>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Evenement.Statut, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Evenement.Statut, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Evenement.Statut, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-2 control-label">Images</label>
            <div class="col-md-10">
                <input type="file" id="fileupload" data-url="@Url.Action("AjaxUploadImage", "Evenements")" name="files[]" multiple />
                <ul id="fileList" class="list-unstyled"></ul>
            </div>
        </div>

        @Html.SubmitWidget(Html.ModeWidgetLabels(mode).ToString(), "default")

    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/fileupload")

}
<script type="text/javascript">
    var filesUploads = [];
    var isSendFile = false;
    $( function () {
        $('.btn-quickTheme').on('click', function () {
            $('#quickTheme').removeClass('hidden');
        });
        $('#addTheme').on('click', function () {
            var lib = $('#quickTheme #theme-libelle').val();
            var desc = $('#quickTheme #theme-description').val();
            $('#theme-libelle').parent().removeClass('has-error');
            var datas = { libelle: lib, description: desc };
            if (lib != "" && lib !== null) {
                $.ajax({
                    url: '@Url.Action("AjaxQuickCreate", "Themes")',
                    method: 'post',
                    data: datas
                }).done(function (response) {
                    console.log(response);
                    if (response.list) {
                        var html = '';
                        $.each(response.list, function (index, data) {
                            html += '<option value="' + data.Id + '">' + data.Libelle + '</option>';
                        });
                        $('#selectedTheme').html(html);
                        $('#quickTheme #theme-libelle').val('');
                        $('#quickTheme #theme-description').val('');
                        $('#quickTheme').addClass('hidden');
                    }
                }).fail(function (response) {
                    $.notify('Une erreur s\'est produite lors de la création du thème', 'danger');
                })
            } else {
                $('#theme-libelle').parent().addClass('has-error');
            }
        });

        function renderAddedFiles() {
            var html = '';
            

            $.each(filesUploads, function (index, data) {
                html += '<li><img id="preview-'+ index +'"/> '+ data.name +' <span class="btn btn-sm btn-danger remove-image" data-index="'+ index +'"><i class="fa fa-times"></i></span></li>';
            });

            $('#fileList').html(html);

            $.each(filesUploads, function (index, data) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#preview-' + index).attr('src', e.target.result);
                }
                reader.readAsDataURL(data);
            });

            $('.remove-image').off('click');
            $('.remove-image').on('click', function () {
                var index = $(this).data('index');
                if (filesUploads[index]) {
                    filesUploads.splice(index, 1);
                }
                renderAddedFiles();
            });
        }

        $('#fileupload').fileupload({
            add: function (e, data) {
                var file = data.files[0];
                filesUploads.push(file);
                renderAddedFiles();
            }
        });

        $('form').on('submit', function (e) {
            if (!isSendFile) {
                var form = $('form');
                var formData = new FormData();
                $.each(filesUploads, function (index, data) {    
                    formData.append("Images["+index+"]", data);
                });
                
                e.preventDefault();
                $.ajax({
                    url: '@Url.Action("AjaxUploadImage", "Evenements")',
                    method: 'post',
                    data: formData,
                    processData: false,
                    contentType: false,
                }).done(function (response) {
                    isSendFile = true;
                    console.log(response)
                    $.each(response.Images, function (index, data) {
                        form.append('<input type="hidden" value="' + data.Id + '" name="Images[]">');
                    });
                    form.submit();
                }).fail(function (response) {
                    isSendFile = false;
                    $.notify('Une erreur s\'est produite lors de l\'envois les images', 'warn');
                });
            }
        });
    });

</script>
